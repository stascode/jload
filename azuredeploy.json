{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Admin username used when provisioning virtual machines"
            }
        },
        "disablePasswordAuthentication" : {
            "type": "string",
            "defaultValue": "true"
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Admin password used when provisioning virtual machines"
            }
        },
        "sshKeyData": {
            "type": "string",
            "metadata": {
                "description": "SSH rsa public key file as a string."
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "jmeter-vnet",
            "metadata": {
                "description": "Virtual network"
            }
        },
        "subNodeCount": {
            "type": "int",
            "defaultValue": 2,
            "metadata": {
                "description": "Number of subordinate JMeter nodes to provision"
            }
        },
        "publicName" : {
            "type": "string"
        },
        "subNodeSize": {
            "type": "string",
            "defaultValue": "Standard_D2_v2",
            "allowedValues": [
                "Standard_D2_v2",
                "Standard_D3_v2",
                "Standard_D4_v2",
                "Standard_A2",
                "Standard_A3",
                "Standard_A4",
                "Standard_A5",
                "Standard_A6",
                "Standard_A7"
            ],
            "metadata": {
                "description": "Size of the subordinate JMeter nodes"
            }
        },
        "bossNodeSize": {
            "type": "string",
            "defaultValue": "Standard_D3_v2",
            "allowedValues": [
                "Standard_D2_v2",
                "Standard_D3_v2",
                "Standard_D4_v2",
                "Standard_A2",
                "Standard_A3",
                "Standard_A4"
            ],
            "metadata": {
                "description": "Size of the boss JMeter node"
            }
        },
        "templateBaseUrl": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/stascode/jload/master/",
            "metadata": {
                "description": "Change this value to your repo name if deploying from a fork"
            }
        }
    },
    "variables": {
        "computeApiVersion": "2016-03-30",
        "networkApiVersion": "2016-03-30",
        "storageApiVersion": "2015-06-15",
        "location": "[resourceGroup().location]",
        "storageAccountName": "[concat(substring(uniqueString(resourceGroup().id, 'jmeter'), 0, 6), 'jmeter')]",
        "bossNodeIp": "10.0.4.10",
        "subNodesIpPrefix": "10.0.10.",
        "networkSettings": {
            "virtualNetworkName": "[parameters('virtualNetworkName')]",
            "addressPrefix": "10.0.0.0/16",
            "subnetBoss": {
                "jmeter": {
                    "name": "boss",
                    "prefix": "10.0.4.0/24",
                    "vnet": "[parameters('virtualNetworkName')]"
                }
            },
            "subnetSub": {
                "jmeter": {
                    "name": "agents",
                    "prefix": "10.0.10.0/24",
                    "vnet": "[parameters('virtualNetworkName')]"
                }
            }
        },
        "subnetBossRef": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName')), '/subnets/boss')]",
        "subnetSubRef": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName')), '/subnets/agents')]",
        "nicName": "jmeter-nic",
        "vmName": "jmeter-vm",
        "setupScripts": [
            "[concat(parameters('templateBaseUrl'), 'jmeter-install.sh')]"
        ],
        "sshKeyPath": "[concat('/home/',parameters('adminUserName'),'/.ssh/authorized_keys')]",
        "settings": {
            "imageReference": {
                "publisher": "Canonical",
                "offer": "UbuntuServer",
                "sku": "14.04.2-LTS",
                "version": "latest"
            },
            "managementPort": "22",
            "extensionSettings": {
                "boss": {
                    "publisher": "Microsoft.OSTCExtensions",
                    "type": "CustomScriptForLinux",
                    "typeHandlerVersion": "1.5",
                    "autoUpgradeMinorVersion": true,
                    "settings": {
                        "fileUris": "[variables('setupScripts')]",
                        "commandToExecute": "[concat('bash jmeter-install.sh -mr ', variables('subNodesIpPrefix'), '-', parameters('subNodeCount'))]"
                    }
                },
                "sub": {
                    "publisher": "Microsoft.OSTCExtensions",
                    "type": "CustomScriptForLinux",
                    "typeHandlerVersion": "1.5",
                    "autoUpgradeMinorVersion": true,
                    "settings": {
                        "fileUris": "[variables('setupScripts')]",
                        "commandToExecute": "[concat('bash jmeter-install.sh')]"
                    }
                }
            }
        }
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "[variables('storageApiVersion')]",
            "location": "[variables('location')]",
            "properties": {
                "accountType": "Standard_LRS"
            }
        },
        {
            "apiVersion": "[variables('networkApiVersion')]",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('networkSettings').virtualNetworkName]",
            "location": "[variables('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('networkSettings').addressPrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('networkSettings').subnetBoss.jmeter.name]",
                        "properties": {
                            "addressPrefix": "[variables('networkSettings').subnetBoss.jmeter.prefix]"
                        }
                    },
                    {
                        "name": "[variables('networkSettings').subnetSub.jmeter.name]",
                        "properties": {
                            "addressPrefix": "[variables('networkSettings').subnetSub.jmeter.prefix]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('networkApiVersion')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "jmeter-pip",
            "location": "[variables('location')]",
            "properties": {
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('publicName')]"
                }
            }
        },
        {
            "apiVersion": "[variables('networkApiVersion')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "jmeter-nsg",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH",
                        "properties": {
                            "description": "Allows SSH traffic",
                            "protocol": "Tcp",
                            "sourcePortRange": "[variables('settings').managementPort]",
                            "destinationPortRange": "[variables('settings').managementPort]",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('networkApiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), '-sub', copyindex())]",
            "location": "[variables('location')]",
            "copy": {
                "name": "subNodesNicLoop",
                "count": "[parameters('subNodeCount')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('networkSettings').virtualNetworkName)]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfigsub",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[concat(variables('subNodesIpPrefix'), copyindex(4))]",
                            "subnet": {
                                "id": "[variables('subnetSubRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('networkApiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), '-boss')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', 'jmeter-pip')]",
                "[concat('Microsoft.Network/networkSecurityGroups/', 'jmeter-nsg')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfigboss",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('bossNodeIp')]",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'jmeter-pip')]"
                            },
                            "subnet": {
                                "id": "[variables('subnetBossRef')]"
                            },
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'jmeter-nsg')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('computeApiVersion')]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('vmName'), '-boss')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '-boss')]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('bossNodeSize')]"
                },
                "osProfile": {
                    "computerName": "[concat('jmeter-boss')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": "[parameters('disablePasswordAuthentication')]",
                        "ssh": {
                            "publicKeys": [
                            {
                                "path": "[variables('sshKeyPath')]",
                                "keyData": "[parameters('sshKeyData')]"
                            }
                            ]
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": "[variables('settings').imageReference]",
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/vhds/', variables('vmName'), '-boss', '-osdisk.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'), '-boss'))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(variables('vmName'), '-boss', '/installjmeter')]",
                    "apiVersion": "[variables('computeApiVersion')]",
                    "location": "[variables('location')]",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), '-boss')]"
                    ],
                    "properties": {
                        "publisher": "[variables('settings').extensionSettings.boss.publisher]",
                        "type": "[variables('settings').extensionSettings.boss.type]",
                        "typeHandlerVersion": "[variables('settings').extensionSettings.boss.typeHandlerVersion]",
                        "settings": {
                            "fileUris": "[variables('settings').extensionSettings.boss.settings.fileUris]",
                            "commandToExecute": "[concat(variables('settings').extensionSettings.boss.settings.commandToExecute)]"
                        }
                    }
                }
            ]
        },
        {
            "apiVersion": "[variables('computeApiVersion')]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('vmName'), '-sub', copyindex())]",
            "location": "[variables('location')]",
            "copy": {
                "name": "subVmLoop",
                "count": "[parameters('subNodeCount')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '-sub', copyindex())]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('subNodeSize')]"
                },
                "osProfile": {
                    "computerName": "[concat('jmeter-sub', copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": "[parameters('disablePasswordAuthentication')]",
                        "ssh": {
                            "publicKeys": [
                            {
                                "path": "[variables('sshKeyPath')]",
                                "keyData": "[parameters('sshKeyData')]"
                            }
                            ]
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": "[variables('settings').imageReference]",
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/vhds/', variables('vmName'), '-sub', copyindex(), '-osdisk.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'), '-sub', copyindex()))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(variables('vmName'), '-sub', copyindex(), '/installjmeter')]",
                    "apiVersion": "[variables('computeApiVersion')]",
                    "location": "[variables('location')]",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), '-sub', copyindex())]"
                    ],
                    "properties": {
                        "publisher": "[variables('settings').extensionSettings.sub.publisher]",
                        "type": "[variables('settings').extensionSettings.sub.type]",
                        "typeHandlerVersion": "[variables('settings').extensionSettings.sub.typeHandlerVersion]",
                        "settings": {
                            "fileUris": "[variables('settings').extensionSettings.sub.settings.fileUris]",
                            "commandToExecute": "[concat(variables('settings').extensionSettings.sub.settings.commandToExecute)]"
                        }
                    }
                }
            ]
        }
    ],
    "outputs": {
        "boss-pip": {
            "type": "string",
            "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', 'jmeter-pip')).ipAddress]"
        }
    }
}
